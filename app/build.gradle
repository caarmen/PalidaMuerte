apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.7.2'
    }
}
android {
    File signFile = rootProject.file('signing.properties')
    if (signFile.exists()) {
        Properties p = new Properties();
        p.load(new FileInputStream(signFile))

        signingConfigs {
            release {
                keyAlias p.KeyAlias
                keyPassword p.KeyPassword
                storeFile file(p.StoreFile)
                storePassword p.StorePassword
            }
        }
        android.buildTypes.release.signingConfig =signingConfigs.release
    } else  {
        android.buildTypes.release.signingConfig = null
    }

    compileSdkVersion 34
    buildToolsVersion "25.0.3"

    defaultConfig {
        versionCode 1500
        versionName "1.5.0"
        minSdkVersion 14
        targetSdkVersion 34
    }

    productFlavors {
        demo {
            applicationId = "ca.rmen.android.poemasfah"
            buildConfigField 'String', 'PROVIDER_AUTHORITY', "\"ca.rmen.android.poemasfah.provider\""
        }
        palidaMuerte {
            applicationId = "ca.rmen.android.palidamuerte"
            buildConfigField 'String', 'PROVIDER_AUTHORITY', "\"ca.rmen.android.palidamuerte.provider\""
        }
        seleccionLectores {
            applicationId = "ca.rmen.android.poemasfah.seleccionlectores"
            buildConfigField 'String', 'PROVIDER_AUTHORITY', "\"ca.rmen.android.poemasfah.seleccionlectores.provider\""
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:25.3.1'
    compile ('net.sourceforge.jexcelapi:jxl:2.6.12') {
        exclude group: "log4j"
    }
}
// Only show real releases with the ben-manes plugin.
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'alpha-preview', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
